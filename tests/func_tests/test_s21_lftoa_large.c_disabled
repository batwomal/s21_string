/*
 * DO NOT EDIT THIS FILE. Generated by checkmk.
 * Edit the original source file
 * "tests/func_tests/tests_check/test_s21_lftoa_large.c" instead.
 */

#include <check.h>

#include "../s21_string_tests.h"

START_TEST(ochen_mnogo_testov) {
  long double value = 1e-20 * powl(1.009253815726334, _i);
  int precision = (_i + 1) % 18;
  char *s21_out = s21_calloc(BUF_SIZE + 1);
  char *orig_out = s21_calloc(BUF_SIZE + 1);
  int len_s21_out = s21_sprintf(s21_out, "%.*Lf", precision, value);
  int len_orig_out = sprintf(orig_out, "%.*Lf", precision, value);
  // long double orig_value = strtold(orig_out, NULL);
  // long double s21_value = strtold(s21_out, NULL);
  int result =
      (len_s21_out == len_orig_out) && (strcmp(s21_out, orig_out) == 0);
  ck_assert_msg(result,
                "\ninput: {%.*Lf} {%d}\n[orig str: %s]\n[s21 str: %s]\n[orig "
                "len: %d]\n[s21 len: %d]",
                precision + 4, value, precision, orig_out, s21_out,
                len_orig_out, len_s21_out);
  free(s21_out);
  free(orig_out);
}
END_TEST

int test_s21_lftoa_large(void) {
  Suite *s1 = suite_create("s21_lftoa_large");
  TCase *tc1_1 = tcase_create("s21_lftoa_large");
  SRunner *sr = srunner_create(s1);
  int nf;

  /* User-specified pre-run code */
  system("mkdir -p tests/logs");
  char full_filename[BUF_SIZE];
  sprintf(full_filename, "tests/logs/%s.log", __FILE_NAME__);
  srunner_set_log(sr, full_filename);

  suite_add_tcase(s1, tc1_1);
  tcase_add_loop_test(tc1_1, ochen_mnogo_testov, 0, 10000);

  srunner_run_all(sr, CK_ENV);
  nf = srunner_ntests_failed(sr);
  srunner_free(sr);

  /* User-specified post-run code */
  return nf;
}
