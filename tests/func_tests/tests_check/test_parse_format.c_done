#include "test_parse_format.h"


specs *test_with_variable_specs (const char **input, ...) {
  va_list args;
  va_start(args, input);
  specs *s21_options = parse_format(input, &args);
  va_end(args);
  return s21_options;
}

#suite parse_format
#test-loop(0,36) test_parse_format_normal_data
  test_parse_format_data data[] = PARSE_TEST_CASES;
  const char *format_str = data[_i].input.format_str;
  int width = data[_i].input.variable_width;
  int precision = data[_i].input.variable_precision;
  specs *s21_options = test_with_variable_specs(&format_str, width, precision);
  // specs *expected_output = s21_calloc(sizeof(specs));
  specs *expected_output = &data[_i].output.expected_output;
  int result = memcmp(s21_options, expected_output, sizeof(specs)) == 0;
  ck_assert_msg(result,"\n[input: {%s} width: {%d} precision: {%d}]\n\tout ----- expected\n"
    "[spec: %c ----- %c]\n[exit_str: {%s} ----- {%s}]"
    "\n[width: %d ----- %d]\n[precision: %d ----- %d]\n[flag_-: %d ----- %d]\n"
    "[flag_+: %d ----- %d]\n[flag_space: %d ----- %d]\n[flag_hash: %d ----- %d]\n"
    "[flag_0: %d ----- %d]\n[length_h: %d ----- %d]\n[length_l: %d ----- %d]\n"
    "[length_L: %d ----- %d]", 
    data[_i].input.format_str, width, precision,
    s21_options->spec, expected_output->spec,
    format_str, data[_i].output.expected_output_str,
    s21_options->width,  expected_output->width,
    s21_options->precision, expected_output->precision,
    s21_options->flag[0], expected_output->flag[0], 
    s21_options->flag[1], expected_output->flag[1], 
    s21_options->flag[2], expected_output->flag[2], 
    s21_options->flag[3], expected_output->flag[3],  
    s21_options->flag[4], expected_output->flag[4], 
    s21_options->length[0], expected_output->length[0], 
    s21_options->length[1], expected_output->length[1], 
    s21_options->length[2], expected_output->length[2]);
  free(s21_options);
  // free(expected_output);

#main-pre
    system("mkdir -p tests/logs");
    char full_filename[BUF_SIZE];
    sprintf(full_filename, "tests/logs/%s.log",__FILE_NAME__);
    srunner_set_log(sr, full_filename);

#main-post
  return nf;